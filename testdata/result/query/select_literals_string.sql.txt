--- select_literals_string.sql
SELECT
  "abc!",
  "a\nb!",
  "\075!",
  "\x3d!",
  "\x3D!",
  "\X3d!",
  "\X3D!",
  "\u203C!",
  "\U0001F408!",
  "it's",
  'it\'s',
  'Title: "Boy"',
  """abc""",
  '''it's''',
  '''Title:"Boy"''',
  '''two
lines''',
  '''why\?''',
  R"abc+",
  r'''abc+''',
  R"""abc+""",
  r'f\(abc,(.*),def\)'

--- AST
&ast.QueryStatement{
  Hint:  (*ast.Hint)(nil),
  With:  (*ast.With)(nil),
  Query: &ast.Select{
    Select:   0,
    Distinct: false,
    As:       nil,
    Results:  []ast.SelectItem{
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 9,
          ValueEnd: 15,
          Value:    "abc!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 19,
          ValueEnd: 26,
          Value:    "a\nb!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 30,
          ValueEnd: 37,
          Value:    "=!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 41,
          ValueEnd: 48,
          Value:    "=!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 52,
          ValueEnd: 59,
          Value:    "=!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 63,
          ValueEnd: 70,
          Value:    "=!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 74,
          ValueEnd: 81,
          Value:    "=!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 85,
          ValueEnd: 94,
          Value:    "‚Äº!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 98,
          ValueEnd: 111,
          Value:    "üêà!",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 115,
          ValueEnd: 121,
          Value:    "it's",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 125,
          ValueEnd: 132,
          Value:    "it's",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 136,
          ValueEnd: 150,
          Value:    "Title: \"Boy\"",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 154,
          ValueEnd: 163,
          Value:    "abc",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 167,
          ValueEnd: 177,
          Value:    "it's",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 181,
          ValueEnd: 198,
          Value:    "Title:\"Boy\"",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 202,
          ValueEnd: 217,
          Value:    "two\nlines",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 221,
          ValueEnd: 232,
          Value:    "why?",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 236,
          ValueEnd: 243,
          Value:    "abc+",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 247,
          ValueEnd: 258,
          Value:    "abc+",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 262,
          ValueEnd: 273,
          Value:    "abc+",
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.StringLiteral{
          ValuePos: 277,
          ValueEnd: 297,
          Value:    "f\\(abc,(.*),def\\)",
        },
      },
    },
    From:    (*ast.From)(nil),
    Where:   (*ast.Where)(nil),
    GroupBy: (*ast.GroupBy)(nil),
    Having:  (*ast.Having)(nil),
    OrderBy: (*ast.OrderBy)(nil),
    Limit:   (*ast.Limit)(nil),
  },
}

--- SQL
SELECT "abc!", "a\nb!", "=!", "=!", "=!", "=!", "=!", "‚Äº!", "üêà!", "it\'s", "it\'s", "Title: \"Boy\"", "abc", "it\'s", "Title:\"Boy\"", "two\nlines", "why\?", "abc+", "abc+", "abc+", "f\\(abc,(.*),def\\)"
