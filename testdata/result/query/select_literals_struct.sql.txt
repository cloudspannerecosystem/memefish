--- select_literals_struct.sql
SELECT
  ARRAY(SELECT STRUCT(1, 2, 3)),
  ARRAY(SELECT STRUCT(1, 2, TRUE)),
  ARRAY(SELECT STRUCT<X INT64, Y INT64, Z INT64>(1, 2, 3)),
  ARRAY(SELECT STRUCT(1 AS X, 2 AS Y, 3 AS Z)),
  ARRAY(SELECT STRUCT<INT64, INT64, INT64>(1, 2, 3)),
  ARRAY(SELECT STRUCT<X INT64, INT64, INT64>(1, 2, 3)),
  ARRAY(SELECT STRUCT(1 AS X, 2, 3)),
  ARRAY(SELECT (1, 2, 3)),
  ARRAY(SELECT STRUCT<X INT64>(1)),
  ARRAY(SELECT STRUCT(1 AS X)),
  ARRAY(SELECT STRUCT<INT64>(1)),
  ARRAY(SELECT STRUCT(1)),
  ARRAY(SELECT STRUCT<>()),
  ARRAY(SELECT STRUCT()),
  EXISTS(SELECT (1, 2))

--- AST
&ast.QueryStatement{
  Query: &ast.Select{
    Results: []ast.SelectItem{
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  9,
          Rparen: 37,
          Query:  &ast.Select{
            Select:  15,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 22,
                  Rparen: 36,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 29,
                        ValueEnd: 30,
                        Base:     10,
                        Value:    "1",
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 32,
                        ValueEnd: 33,
                        Base:     10,
                        Value:    "2",
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 35,
                        ValueEnd: 36,
                        Base:     10,
                        Value:    "3",
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  42,
          Rparen: 73,
          Query:  &ast.Select{
            Select:  48,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 55,
                  Rparen: 72,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 62,
                        ValueEnd: 63,
                        Base:     10,
                        Value:    "1",
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 65,
                        ValueEnd: 66,
                        Base:     10,
                        Value:    "2",
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.BoolLiteral{
                        ValuePos: 68,
                        Value:    true,
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  78,
          Rparen: 133,
          Query:  &ast.Select{
            Select:  84,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 91,
                  Rparen: 132,
                  Fields: []*ast.StructField{
                    &ast.StructField{
                      Ident: &ast.Ident{
                        NamePos: 98,
                        NameEnd: 99,
                        Name:    "X",
                      },
                      Type: &ast.SimpleType{
                        NamePos: 100,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Ident: &ast.Ident{
                        NamePos: 107,
                        NameEnd: 108,
                        Name:    "Y",
                      },
                      Type: &ast.SimpleType{
                        NamePos: 109,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Ident: &ast.Ident{
                        NamePos: 116,
                        NameEnd: 117,
                        Name:    "Z",
                      },
                      Type: &ast.SimpleType{
                        NamePos: 118,
                        Name:    "INT64",
                      },
                    },
                  },
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 125,
                      ValueEnd: 126,
                      Base:     10,
                      Value:    "1",
                    },
                    &ast.IntLiteral{
                      ValuePos: 128,
                      ValueEnd: 129,
                      Base:     10,
                      Value:    "2",
                    },
                    &ast.IntLiteral{
                      ValuePos: 131,
                      ValueEnd: 132,
                      Base:     10,
                      Value:    "3",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  138,
          Rparen: 181,
          Query:  &ast.Select{
            Select:  144,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 151,
                  Rparen: 180,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.Alias{
                      Expr: &ast.IntLiteral{
                        ValuePos: 158,
                        ValueEnd: 159,
                        Base:     10,
                        Value:    "1",
                      },
                      As: &ast.AsAlias{
                        As:    160,
                        Alias: &ast.Ident{
                          NamePos: 163,
                          NameEnd: 164,
                          Name:    "X",
                        },
                      },
                    },
                    &ast.Alias{
                      Expr: &ast.IntLiteral{
                        ValuePos: 166,
                        ValueEnd: 167,
                        Base:     10,
                        Value:    "2",
                      },
                      As: &ast.AsAlias{
                        As:    168,
                        Alias: &ast.Ident{
                          NamePos: 171,
                          NameEnd: 172,
                          Name:    "Y",
                        },
                      },
                    },
                    &ast.Alias{
                      Expr: &ast.IntLiteral{
                        ValuePos: 174,
                        ValueEnd: 175,
                        Base:     10,
                        Value:    "3",
                      },
                      As: &ast.AsAlias{
                        As:    176,
                        Alias: &ast.Ident{
                          NamePos: 179,
                          NameEnd: 180,
                          Name:    "Z",
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  186,
          Rparen: 235,
          Query:  &ast.Select{
            Select:  192,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 199,
                  Rparen: 234,
                  Fields: []*ast.StructField{
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 206,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 213,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 220,
                        Name:    "INT64",
                      },
                    },
                  },
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 227,
                      ValueEnd: 228,
                      Base:     10,
                      Value:    "1",
                    },
                    &ast.IntLiteral{
                      ValuePos: 230,
                      ValueEnd: 231,
                      Base:     10,
                      Value:    "2",
                    },
                    &ast.IntLiteral{
                      ValuePos: 233,
                      ValueEnd: 234,
                      Base:     10,
                      Value:    "3",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  240,
          Rparen: 291,
          Query:  &ast.Select{
            Select:  246,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 253,
                  Rparen: 290,
                  Fields: []*ast.StructField{
                    &ast.StructField{
                      Ident: &ast.Ident{
                        NamePos: 260,
                        NameEnd: 261,
                        Name:    "X",
                      },
                      Type: &ast.SimpleType{
                        NamePos: 262,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 269,
                        Name:    "INT64",
                      },
                    },
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 276,
                        Name:    "INT64",
                      },
                    },
                  },
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 283,
                      ValueEnd: 284,
                      Base:     10,
                      Value:    "1",
                    },
                    &ast.IntLiteral{
                      ValuePos: 286,
                      ValueEnd: 287,
                      Base:     10,
                      Value:    "2",
                    },
                    &ast.IntLiteral{
                      ValuePos: 289,
                      ValueEnd: 290,
                      Base:     10,
                      Value:    "3",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  296,
          Rparen: 329,
          Query:  &ast.Select{
            Select:  302,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 309,
                  Rparen: 328,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.Alias{
                      Expr: &ast.IntLiteral{
                        ValuePos: 316,
                        ValueEnd: 317,
                        Base:     10,
                        Value:    "1",
                      },
                      As: &ast.AsAlias{
                        As:    318,
                        Alias: &ast.Ident{
                          NamePos: 321,
                          NameEnd: 322,
                          Name:    "X",
                        },
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 324,
                        ValueEnd: 325,
                        Base:     10,
                        Value:    "2",
                      },
                    },
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 327,
                        ValueEnd: 328,
                        Base:     10,
                        Value:    "3",
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  334,
          Rparen: 356,
          Query:  &ast.Select{
            Select:  340,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TupleStructLiteral{
                  Lparen: 347,
                  Rparen: 355,
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 348,
                      ValueEnd: 349,
                      Base:     10,
                      Value:    "1",
                    },
                    &ast.IntLiteral{
                      ValuePos: 351,
                      ValueEnd: 352,
                      Base:     10,
                      Value:    "2",
                    },
                    &ast.IntLiteral{
                      ValuePos: 354,
                      ValueEnd: 355,
                      Base:     10,
                      Value:    "3",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  361,
          Rparen: 392,
          Query:  &ast.Select{
            Select:  367,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 374,
                  Rparen: 391,
                  Fields: []*ast.StructField{
                    &ast.StructField{
                      Ident: &ast.Ident{
                        NamePos: 381,
                        NameEnd: 382,
                        Name:    "X",
                      },
                      Type: &ast.SimpleType{
                        NamePos: 383,
                        Name:    "INT64",
                      },
                    },
                  },
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 390,
                      ValueEnd: 391,
                      Base:     10,
                      Value:    "1",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  397,
          Rparen: 424,
          Query:  &ast.Select{
            Select:  403,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 410,
                  Rparen: 423,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.Alias{
                      Expr: &ast.IntLiteral{
                        ValuePos: 417,
                        ValueEnd: 418,
                        Base:     10,
                        Value:    "1",
                      },
                      As: &ast.AsAlias{
                        As:    419,
                        Alias: &ast.Ident{
                          NamePos: 422,
                          NameEnd: 423,
                          Name:    "X",
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  429,
          Rparen: 458,
          Query:  &ast.Select{
            Select:  435,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 442,
                  Rparen: 457,
                  Fields: []*ast.StructField{
                    &ast.StructField{
                      Type: &ast.SimpleType{
                        NamePos: 449,
                        Name:    "INT64",
                      },
                    },
                  },
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 456,
                      ValueEnd: 457,
                      Base:     10,
                      Value:    "1",
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  463,
          Rparen: 485,
          Query:  &ast.Select{
            Select:  469,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 476,
                  Rparen: 484,
                  Values: []ast.TypelessStructLiteralArg{
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 483,
                        ValueEnd: 484,
                        Base:     10,
                        Value:    "1",
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  490,
          Rparen: 513,
          Query:  &ast.Select{
            Select:  496,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypedStructLiteral{
                  Struct: 503,
                  Rparen: 512,
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ArraySubQuery{
          Array:  518,
          Rparen: 539,
          Query:  &ast.Select{
            Select:  524,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TypelessStructLiteral{
                  Struct: 531,
                  Rparen: 538,
                },
              },
            },
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.ExistsSubQuery{
          Exists: 544,
          Rparen: 564,
          Query:  &ast.Select{
            Select:  551,
            Results: []ast.SelectItem{
              &ast.ExprSelectItem{
                Expr: &ast.TupleStructLiteral{
                  Lparen: 558,
                  Rparen: 563,
                  Values: []ast.Expr{
                    &ast.IntLiteral{
                      ValuePos: 559,
                      ValueEnd: 560,
                      Base:     10,
                      Value:    "1",
                    },
                    &ast.IntLiteral{
                      ValuePos: 562,
                      ValueEnd: 563,
                      Base:     10,
                      Value:    "2",
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
  },
}

--- SQL
SELECT ARRAY(SELECT STRUCT(1, 2, 3)), ARRAY(SELECT STRUCT(1, 2, TRUE)), ARRAY(SELECT STRUCT<X INT64, Y INT64, Z INT64>(1, 2, 3)), ARRAY(SELECT STRUCT(1 AS X, 2 AS Y, 3 AS Z)), ARRAY(SELECT STRUCT<INT64, INT64, INT64>(1, 2, 3)), ARRAY(SELECT STRUCT<X INT64, INT64, INT64>(1, 2, 3)), ARRAY(SELECT STRUCT(1 AS X, 2, 3)), ARRAY(SELECT (1, 2, 3)), ARRAY(SELECT STRUCT<X INT64>(1)), ARRAY(SELECT STRUCT(1 AS X)), ARRAY(SELECT STRUCT<INT64>(1)), ARRAY(SELECT STRUCT(1)), ARRAY(SELECT STRUCT<>()), ARRAY(SELECT STRUCT()), EXISTS(SELECT (1, 2))
