--- select_from_implicit_unnest.sql
SELECT *
FROM UNNEST([STRUCT<arr ARRAY<STRING>>(["foo"])]) AS t, t.arr
--- AST
&ast.QueryStatement{
  Hint:  (*ast.Hint)(nil),
  With:  (*ast.With)(nil),
  Query: &ast.Select{
    Select:   0,
    Distinct: false,
    As:       nil,
    Results:  []ast.SelectItem{
      &ast.Star{
        Star: 7,
      },
    },
    From: &ast.From{
      From:   9,
      Source: &ast.Join{
        Op:     ",",
        Method: "",
        Hint:   (*ast.Hint)(nil),
        Left:   &ast.Unnest{
          Unnest: 14,
          Rparen: 57,
          Expr:   &ast.ArrayLiteral{
            Array:  -1,
            Lbrack: 21,
            Rbrack: 56,
            Type:   nil,
            Values: []ast.Expr{
              &ast.StructLiteral{
                Struct: 22,
                Lparen: 47,
                Rparen: 55,
                Fields: []*ast.StructField{
                  &ast.StructField{
                    Ident: &ast.Ident{
                      NamePos: 29,
                      NameEnd: 32,
                      Name:    "arr",
                    },
                    Type: &ast.ArrayType{
                      Array: 33,
                      Gt:    45,
                      Item:  &ast.SimpleType{
                        NamePos: 39,
                        Name:    "STRING",
                      },
                    },
                  },
                },
                Values: []ast.Expr{
                  &ast.ArrayLiteral{
                    Array:  -1,
                    Lbrack: 48,
                    Rbrack: 54,
                    Type:   nil,
                    Values: []ast.Expr{
                      &ast.StringLiteral{
                        ValuePos: 49,
                        ValueEnd: 54,
                        Value:    "foo",
                      },
                    },
                  },
                },
              },
            },
          },
          Hint: (*ast.Hint)(nil),
          As:   &ast.AsAlias{
            As:    -1,
            Alias: &ast.Ident{
              NamePos: 62,
              NameEnd: 63,
              Name:    "t",
            },
          },
          WithOffset: (*ast.WithOffset)(nil),
          Sample:     (*ast.TableSample)(nil),
        },
        Right: &ast.PathTableExpr{
          Path: &ast.Path{
            Idents: []*ast.Ident{
              &ast.Ident{
                NamePos: 65,
                NameEnd: 66,
                Name:    "t",
              },
              &ast.Ident{
                NamePos: 67,
                NameEnd: 70,
                Name:    "arr",
              },
            },
          },
          Hint:   (*ast.Hint)(nil),
          As:     (*ast.AsAlias)(nil),
          Sample: (*ast.TableSample)(nil),
        },
        Cond: nil,
      },
    },
    Where:   (*ast.Where)(nil),
    GroupBy: (*ast.GroupBy)(nil),
    Having:  (*ast.Having)(nil),
    OrderBy: (*ast.OrderBy)(nil),
    Limit:   (*ast.Limit)(nil),
  },
}

--- SQL
SELECT * FROM UNNEST([STRUCT<arr ARRAY<STRING>>(["foo"])]) AS t, t.arr
