--- select_select_set_operator_expr.sql
select ((select 1) union all (select 2)) + 3,
       ((select 1) intersect all (select 1)) + 3,
       ((select 1) except all (select 1)) + 3

--- AST
&ast.QueryStatement{
  Hint:  (*ast.Hint)(nil),
  Query: &ast.Select{
    Select:        0,
    AllOrDistinct: "",
    As:            nil,
    Results:       []ast.SelectItem{
      &ast.ExprSelectItem{
        Expr: &ast.BinaryExpr{
          Op:   "+",
          Left: &ast.ScalarSubQuery{
            Lparen: 7,
            Rparen: 39,
            Query:  &ast.CompoundQuery{
              Op:            "UNION",
              AllOrDistinct: "ALL",
              Queries:       []ast.QueryExpr{
                &ast.SubQuery{
                  Lparen: 8,
                  Rparen: 17,
                  Query:  &ast.Select{
                    Select:        9,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 16,
                          ValueEnd: 17,
                          Base:     10,
                          Value:    "1",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
                &ast.SubQuery{
                  Lparen: 29,
                  Rparen: 38,
                  Query:  &ast.Select{
                    Select:        30,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 37,
                          ValueEnd: 38,
                          Base:     10,
                          Value:    "2",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
              },
            },
          },
          Right: &ast.IntLiteral{
            ValuePos: 43,
            ValueEnd: 44,
            Base:     10,
            Value:    "3",
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.BinaryExpr{
          Op:   "+",
          Left: &ast.ScalarSubQuery{
            Lparen: 53,
            Rparen: 89,
            Query:  &ast.CompoundQuery{
              Op:            "INTERSECT",
              AllOrDistinct: "ALL",
              Queries:       []ast.QueryExpr{
                &ast.SubQuery{
                  Lparen: 54,
                  Rparen: 63,
                  Query:  &ast.Select{
                    Select:        55,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 62,
                          ValueEnd: 63,
                          Base:     10,
                          Value:    "1",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
                &ast.SubQuery{
                  Lparen: 79,
                  Rparen: 88,
                  Query:  &ast.Select{
                    Select:        80,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 87,
                          ValueEnd: 88,
                          Base:     10,
                          Value:    "1",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
              },
            },
          },
          Right: &ast.IntLiteral{
            ValuePos: 93,
            ValueEnd: 94,
            Base:     10,
            Value:    "3",
          },
        },
      },
      &ast.ExprSelectItem{
        Expr: &ast.BinaryExpr{
          Op:   "+",
          Left: &ast.ScalarSubQuery{
            Lparen: 103,
            Rparen: 136,
            Query:  &ast.CompoundQuery{
              Op:            "EXCEPT",
              AllOrDistinct: "ALL",
              Queries:       []ast.QueryExpr{
                &ast.SubQuery{
                  Lparen: 104,
                  Rparen: 113,
                  Query:  &ast.Select{
                    Select:        105,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 112,
                          ValueEnd: 113,
                          Base:     10,
                          Value:    "1",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
                &ast.SubQuery{
                  Lparen: 126,
                  Rparen: 135,
                  Query:  &ast.Select{
                    Select:        127,
                    AllOrDistinct: "",
                    As:            nil,
                    Results:       []ast.SelectItem{
                      &ast.ExprSelectItem{
                        Expr: &ast.IntLiteral{
                          ValuePos: 134,
                          ValueEnd: 135,
                          Base:     10,
                          Value:    "1",
                        },
                      },
                    },
                    From:    (*ast.From)(nil),
                    Where:   (*ast.Where)(nil),
                    GroupBy: (*ast.GroupBy)(nil),
                    Having:  (*ast.Having)(nil),
                  },
                },
              },
            },
          },
          Right: &ast.IntLiteral{
            ValuePos: 140,
            ValueEnd: 141,
            Base:     10,
            Value:    "3",
          },
        },
      },
    },
    From:    (*ast.From)(nil),
    Where:   (*ast.Where)(nil),
    GroupBy: (*ast.GroupBy)(nil),
    Having:  (*ast.Having)(nil),
  },
}

--- SQL
SELECT ((SELECT 1) UNION ALL (SELECT 2)) + 3, ((SELECT 1) INTERSECT ALL (SELECT 1)) + 3, ((SELECT 1) EXCEPT ALL (SELECT 1)) + 3
