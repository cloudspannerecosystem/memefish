--- select_singer_with_join_various.sql
SELECT
  *
FROM
  Singers A
  JOIN
  Singers B
  ON A.SingerID = B.SingerID
  INNER JOIN
  Singers C
  ON A.SingerID = C.SingerID
  CROSS JOIN
  Singers D
  FULL JOIN
  Singers E
  ON A.SingerID = E.SingerID
  FULL OUTER JOIN
  Singers F
  ON A.SingerID = F.SingerID
  LEFT JOIN
  Singers G
  ON A.SingerID = G.SingerID
  LEFT OUTER JOIN
  Singers H
  ON A.SingerID = H.SingerID
  RIGHT JOIN
  Singers I
  ON A.SingerID = I.SingerID
  RIGHT OUTER JOIN
  Singers J
  ON A.SingerID = J.SingerID

--- AST
&ast.QueryStatement{
  Hint:  (*ast.Hint)(nil),
  With:  (*ast.With)(nil),
  Query: &ast.Select{
    Select:   0,
    Distinct: false,
    As:       nil,
    Results:  []ast.SelectItem{
      &ast.Star{
        Star: 9,
      },
    },
    From: &ast.From{
      From:   11,
      Source: &ast.Join{
        Op:     "RIGHT OUTER JOIN",
        Method: "",
        Hint:   (*ast.Hint)(nil),
        Left:   &ast.Join{
          Op:     "RIGHT OUTER JOIN",
          Method: "",
          Hint:   (*ast.Hint)(nil),
          Left:   &ast.Join{
            Op:     "LEFT OUTER JOIN",
            Method: "",
            Hint:   (*ast.Hint)(nil),
            Left:   &ast.Join{
              Op:     "LEFT OUTER JOIN",
              Method: "",
              Hint:   (*ast.Hint)(nil),
              Left:   &ast.Join{
                Op:     "FULL OUTER JOIN",
                Method: "",
                Hint:   (*ast.Hint)(nil),
                Left:   &ast.Join{
                  Op:     "FULL OUTER JOIN",
                  Method: "",
                  Hint:   (*ast.Hint)(nil),
                  Left:   &ast.Join{
                    Op:     "CROSS JOIN",
                    Method: "",
                    Hint:   (*ast.Hint)(nil),
                    Left:   &ast.Join{
                      Op:     "INNER JOIN",
                      Method: "",
                      Hint:   (*ast.Hint)(nil),
                      Left:   &ast.Join{
                        Op:     "INNER JOIN",
                        Method: "",
                        Hint:   (*ast.Hint)(nil),
                        Left:   &ast.TableName{
                          Table: &ast.Ident{
                            NamePos: 18,
                            NameEnd: 25,
                            Name:    "Singers",
                          },
                          Hint: (*ast.Hint)(nil),
                          As:   &ast.AsAlias{
                            As:    26,
                            Alias: &ast.Ident{
                              NamePos: 26,
                              NameEnd: 27,
                              Name:    "A",
                            },
                          },
                          Sample: (*ast.TableSample)(nil),
                        },
                        Right: &ast.TableName{
                          Table: &ast.Ident{
                            NamePos: 37,
                            NameEnd: 44,
                            Name:    "Singers",
                          },
                          Hint: (*ast.Hint)(nil),
                          As:   &ast.AsAlias{
                            As:    45,
                            Alias: &ast.Ident{
                              NamePos: 45,
                              NameEnd: 46,
                              Name:    "B",
                            },
                          },
                          Sample: (*ast.TableSample)(nil),
                        },
                        Cond: &ast.On{
                          On:   49,
                          Expr: &ast.BinaryExpr{
                            Op:   "=",
                            Left: &ast.Path{
                              Idents: []*ast.Ident{
                                &ast.Ident{
                                  NamePos: 52,
                                  NameEnd: 53,
                                  Name:    "A",
                                },
                                &ast.Ident{
                                  NamePos: 54,
                                  NameEnd: 62,
                                  Name:    "SingerID",
                                },
                              },
                            },
                            Right: &ast.Path{
                              Idents: []*ast.Ident{
                                &ast.Ident{
                                  NamePos: 65,
                                  NameEnd: 66,
                                  Name:    "B",
                                },
                                &ast.Ident{
                                  NamePos: 67,
                                  NameEnd: 75,
                                  Name:    "SingerID",
                                },
                              },
                            },
                          },
                        },
                      },
                      Right: &ast.TableName{
                        Table: &ast.Ident{
                          NamePos: 91,
                          NameEnd: 98,
                          Name:    "Singers",
                        },
                        Hint: (*ast.Hint)(nil),
                        As:   &ast.AsAlias{
                          As:    99,
                          Alias: &ast.Ident{
                            NamePos: 99,
                            NameEnd: 100,
                            Name:    "C",
                          },
                        },
                        Sample: (*ast.TableSample)(nil),
                      },
                      Cond: &ast.On{
                        On:   103,
                        Expr: &ast.BinaryExpr{
                          Op:   "=",
                          Left: &ast.Path{
                            Idents: []*ast.Ident{
                              &ast.Ident{
                                NamePos: 106,
                                NameEnd: 107,
                                Name:    "A",
                              },
                              &ast.Ident{
                                NamePos: 108,
                                NameEnd: 116,
                                Name:    "SingerID",
                              },
                            },
                          },
                          Right: &ast.Path{
                            Idents: []*ast.Ident{
                              &ast.Ident{
                                NamePos: 119,
                                NameEnd: 120,
                                Name:    "C",
                              },
                              &ast.Ident{
                                NamePos: 121,
                                NameEnd: 129,
                                Name:    "SingerID",
                              },
                            },
                          },
                        },
                      },
                    },
                    Right: &ast.TableName{
                      Table: &ast.Ident{
                        NamePos: 145,
                        NameEnd: 152,
                        Name:    "Singers",
                      },
                      Hint: (*ast.Hint)(nil),
                      As:   &ast.AsAlias{
                        As:    153,
                        Alias: &ast.Ident{
                          NamePos: 153,
                          NameEnd: 154,
                          Name:    "D",
                        },
                      },
                      Sample: (*ast.TableSample)(nil),
                    },
                    Cond: nil,
                  },
                  Right: &ast.TableName{
                    Table: &ast.Ident{
                      NamePos: 169,
                      NameEnd: 176,
                      Name:    "Singers",
                    },
                    Hint: (*ast.Hint)(nil),
                    As:   &ast.AsAlias{
                      As:    177,
                      Alias: &ast.Ident{
                        NamePos: 177,
                        NameEnd: 178,
                        Name:    "E",
                      },
                    },
                    Sample: (*ast.TableSample)(nil),
                  },
                  Cond: &ast.On{
                    On:   181,
                    Expr: &ast.BinaryExpr{
                      Op:   "=",
                      Left: &ast.Path{
                        Idents: []*ast.Ident{
                          &ast.Ident{
                            NamePos: 184,
                            NameEnd: 185,
                            Name:    "A",
                          },
                          &ast.Ident{
                            NamePos: 186,
                            NameEnd: 194,
                            Name:    "SingerID",
                          },
                        },
                      },
                      Right: &ast.Path{
                        Idents: []*ast.Ident{
                          &ast.Ident{
                            NamePos: 197,
                            NameEnd: 198,
                            Name:    "E",
                          },
                          &ast.Ident{
                            NamePos: 199,
                            NameEnd: 207,
                            Name:    "SingerID",
                          },
                        },
                      },
                    },
                  },
                },
                Right: &ast.TableName{
                  Table: &ast.Ident{
                    NamePos: 228,
                    NameEnd: 235,
                    Name:    "Singers",
                  },
                  Hint: (*ast.Hint)(nil),
                  As:   &ast.AsAlias{
                    As:    236,
                    Alias: &ast.Ident{
                      NamePos: 236,
                      NameEnd: 237,
                      Name:    "F",
                    },
                  },
                  Sample: (*ast.TableSample)(nil),
                },
                Cond: &ast.On{
                  On:   240,
                  Expr: &ast.BinaryExpr{
                    Op:   "=",
                    Left: &ast.Path{
                      Idents: []*ast.Ident{
                        &ast.Ident{
                          NamePos: 243,
                          NameEnd: 244,
                          Name:    "A",
                        },
                        &ast.Ident{
                          NamePos: 245,
                          NameEnd: 253,
                          Name:    "SingerID",
                        },
                      },
                    },
                    Right: &ast.Path{
                      Idents: []*ast.Ident{
                        &ast.Ident{
                          NamePos: 256,
                          NameEnd: 257,
                          Name:    "F",
                        },
                        &ast.Ident{
                          NamePos: 258,
                          NameEnd: 266,
                          Name:    "SingerID",
                        },
                      },
                    },
                  },
                },
              },
              Right: &ast.TableName{
                Table: &ast.Ident{
                  NamePos: 281,
                  NameEnd: 288,
                  Name:    "Singers",
                },
                Hint: (*ast.Hint)(nil),
                As:   &ast.AsAlias{
                  As:    289,
                  Alias: &ast.Ident{
                    NamePos: 289,
                    NameEnd: 290,
                    Name:    "G",
                  },
                },
                Sample: (*ast.TableSample)(nil),
              },
              Cond: &ast.On{
                On:   293,
                Expr: &ast.BinaryExpr{
                  Op:   "=",
                  Left: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 296,
                        NameEnd: 297,
                        Name:    "A",
                      },
                      &ast.Ident{
                        NamePos: 298,
                        NameEnd: 306,
                        Name:    "SingerID",
                      },
                    },
                  },
                  Right: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 309,
                        NameEnd: 310,
                        Name:    "G",
                      },
                      &ast.Ident{
                        NamePos: 311,
                        NameEnd: 319,
                        Name:    "SingerID",
                      },
                    },
                  },
                },
              },
            },
            Right: &ast.TableName{
              Table: &ast.Ident{
                NamePos: 340,
                NameEnd: 347,
                Name:    "Singers",
              },
              Hint: (*ast.Hint)(nil),
              As:   &ast.AsAlias{
                As:    348,
                Alias: &ast.Ident{
                  NamePos: 348,
                  NameEnd: 349,
                  Name:    "H",
                },
              },
              Sample: (*ast.TableSample)(nil),
            },
            Cond: &ast.On{
              On:   352,
              Expr: &ast.BinaryExpr{
                Op:   "=",
                Left: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 355,
                      NameEnd: 356,
                      Name:    "A",
                    },
                    &ast.Ident{
                      NamePos: 357,
                      NameEnd: 365,
                      Name:    "SingerID",
                    },
                  },
                },
                Right: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 368,
                      NameEnd: 369,
                      Name:    "H",
                    },
                    &ast.Ident{
                      NamePos: 370,
                      NameEnd: 378,
                      Name:    "SingerID",
                    },
                  },
                },
              },
            },
          },
          Right: &ast.TableName{
            Table: &ast.Ident{
              NamePos: 394,
              NameEnd: 401,
              Name:    "Singers",
            },
            Hint: (*ast.Hint)(nil),
            As:   &ast.AsAlias{
              As:    402,
              Alias: &ast.Ident{
                NamePos: 402,
                NameEnd: 403,
                Name:    "I",
              },
            },
            Sample: (*ast.TableSample)(nil),
          },
          Cond: &ast.On{
            On:   406,
            Expr: &ast.BinaryExpr{
              Op:   "=",
              Left: &ast.Path{
                Idents: []*ast.Ident{
                  &ast.Ident{
                    NamePos: 409,
                    NameEnd: 410,
                    Name:    "A",
                  },
                  &ast.Ident{
                    NamePos: 411,
                    NameEnd: 419,
                    Name:    "SingerID",
                  },
                },
              },
              Right: &ast.Path{
                Idents: []*ast.Ident{
                  &ast.Ident{
                    NamePos: 422,
                    NameEnd: 423,
                    Name:    "I",
                  },
                  &ast.Ident{
                    NamePos: 424,
                    NameEnd: 432,
                    Name:    "SingerID",
                  },
                },
              },
            },
          },
        },
        Right: &ast.TableName{
          Table: &ast.Ident{
            NamePos: 454,
            NameEnd: 461,
            Name:    "Singers",
          },
          Hint: (*ast.Hint)(nil),
          As:   &ast.AsAlias{
            As:    462,
            Alias: &ast.Ident{
              NamePos: 462,
              NameEnd: 463,
              Name:    "J",
            },
          },
          Sample: (*ast.TableSample)(nil),
        },
        Cond: &ast.On{
          On:   466,
          Expr: &ast.BinaryExpr{
            Op:   "=",
            Left: &ast.Path{
              Idents: []*ast.Ident{
                &ast.Ident{
                  NamePos: 469,
                  NameEnd: 470,
                  Name:    "A",
                },
                &ast.Ident{
                  NamePos: 471,
                  NameEnd: 479,
                  Name:    "SingerID",
                },
              },
            },
            Right: &ast.Path{
              Idents: []*ast.Ident{
                &ast.Ident{
                  NamePos: 482,
                  NameEnd: 483,
                  Name:    "J",
                },
                &ast.Ident{
                  NamePos: 484,
                  NameEnd: 492,
                  Name:    "SingerID",
                },
              },
            },
          },
        },
      },
    },
    Where:   (*ast.Where)(nil),
    GroupBy: (*ast.GroupBy)(nil),
    Having:  (*ast.Having)(nil),
    OrderBy: (*ast.OrderBy)(nil),
    Limit:   (*ast.Limit)(nil),
  },
}

--- SQL
SELECT * FROM Singers AS A INNER JOIN Singers AS B ON A.SingerID = B.SingerID INNER JOIN Singers AS C ON A.SingerID = C.SingerID CROSS JOIN Singers AS D FULL OUTER JOIN Singers AS E ON A.SingerID = E.SingerID FULL OUTER JOIN Singers AS F ON A.SingerID = F.SingerID LEFT OUTER JOIN Singers AS G ON A.SingerID = G.SingerID LEFT OUTER JOIN Singers AS H ON A.SingerID = H.SingerID RIGHT OUTER JOIN Singers AS I ON A.SingerID = I.SingerID RIGHT OUTER JOIN Singers AS J ON A.SingerID = J.SingerID
