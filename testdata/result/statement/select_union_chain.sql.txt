--- select_union_chain.sql
(select 1) union all (select 2) union all (select 3)

--- AST
&ast.QueryStatement{
  Hint:  (*ast.Hint)(nil),
  Query: &ast.CompoundQuery{
    Op:            "UNION",
    AllOrDistinct: "ALL",
    Queries:       []ast.QueryExpr{
      &ast.SubQuery{
        Lparen: 0,
        Rparen: 9,
        Query:  &ast.Select{
          Select:        1,
          AllOrDistinct: "",
          As:            nil,
          Results:       []ast.SelectItem{
            &ast.ExprSelectItem{
              Expr: &ast.IntLiteral{
                ValuePos: 8,
                ValueEnd: 9,
                Base:     10,
                Value:    "1",
              },
            },
          },
          From:    (*ast.From)(nil),
          Where:   (*ast.Where)(nil),
          GroupBy: (*ast.GroupBy)(nil),
          Having:  (*ast.Having)(nil),
        },
      },
      &ast.SubQuery{
        Lparen: 21,
        Rparen: 30,
        Query:  &ast.Select{
          Select:        22,
          AllOrDistinct: "",
          As:            nil,
          Results:       []ast.SelectItem{
            &ast.ExprSelectItem{
              Expr: &ast.IntLiteral{
                ValuePos: 29,
                ValueEnd: 30,
                Base:     10,
                Value:    "2",
              },
            },
          },
          From:    (*ast.From)(nil),
          Where:   (*ast.Where)(nil),
          GroupBy: (*ast.GroupBy)(nil),
          Having:  (*ast.Having)(nil),
        },
      },
      &ast.SubQuery{
        Lparen: 42,
        Rparen: 51,
        Query:  &ast.Select{
          Select:        43,
          AllOrDistinct: "",
          As:            nil,
          Results:       []ast.SelectItem{
            &ast.ExprSelectItem{
              Expr: &ast.IntLiteral{
                ValuePos: 50,
                ValueEnd: 51,
                Base:     10,
                Value:    "3",
              },
            },
          },
          From:    (*ast.From)(nil),
          Where:   (*ast.Where)(nil),
          GroupBy: (*ast.GroupBy)(nil),
          Having:  (*ast.Having)(nil),
        },
      },
    },
  },
}

--- SQL
(SELECT 1) UNION ALL (SELECT 2) UNION ALL (SELECT 3)
