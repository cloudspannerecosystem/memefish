--- create_table.sql
create table foo (
  foo int64,
  bar float64 not null,
  baz string(255) not null options(allow_commit_timestamp = null),
  qux string(255) not null as (concat(baz, "a")) stored,
  foreign key (foo) references t2 (t2key1),
  foreign key (bar) references t2 (t2key2) on delete cascade,
  foreign key (baz) references t2 (t2key3) on delete no action,
  constraint fkname foreign key (foo, bar) references t2 (t2key1, t2key2),
  check (foo > 0),
  constraint cname check (bar > 0),
  quux json,
  corge timestamp not null default (current_timestamp())
) primary key (foo, bar)

--- AST
&ast.CreateTable{
  Create:      0,
  Rparen:      573,
  IfNotExists: false,
  Name:        &ast.Ident{
    NamePos: 13,
    NameEnd: 16,
    Name:    "foo",
  },
  Columns: []*ast.ColumnDef{
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 21,
        NameEnd: 24,
        Name:    "foo",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 25,
        Name:    "INT64",
      },
      NotNull:       false,
      DefaultExpr:   (*ast.ColumnDefaultExpr)(nil),
      GeneratedExpr: (*ast.GeneratedColumnExpr)(nil),
      Options:       (*ast.ColumnDefOptions)(nil),
    },
    &ast.ColumnDef{
      Null: 50,
      Name: &ast.Ident{
        NamePos: 34,
        NameEnd: 37,
        Name:    "bar",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 38,
        Name:    "FLOAT64",
      },
      NotNull:       true,
      DefaultExpr:   (*ast.ColumnDefaultExpr)(nil),
      GeneratedExpr: (*ast.GeneratedColumnExpr)(nil),
      Options:       (*ast.ColumnDefOptions)(nil),
    },
    &ast.ColumnDef{
      Null: 78,
      Name: &ast.Ident{
        NamePos: 58,
        NameEnd: 61,
        Name:    "baz",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 62,
        Rparen:  72,
        Name:    "STRING",
        Max:     false,
        Size:    &ast.IntLiteral{
          ValuePos: 69,
          ValueEnd: 72,
          Base:     10,
          Value:    "255",
        },
      },
      NotNull:       true,
      DefaultExpr:   (*ast.ColumnDefaultExpr)(nil),
      GeneratedExpr: (*ast.GeneratedColumnExpr)(nil),
      Options:       &ast.ColumnDefOptions{
        Options:              83,
        Rparen:               121,
        AllowCommitTimestamp: false,
      },
    },
    &ast.ColumnDef{
      Null: 145,
      Name: &ast.Ident{
        NamePos: 125,
        NameEnd: 128,
        Name:    "qux",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 129,
        Rparen:  139,
        Name:    "STRING",
        Max:     false,
        Size:    &ast.IntLiteral{
          ValuePos: 136,
          ValueEnd: 139,
          Base:     10,
          Value:    "255",
        },
      },
      NotNull:       true,
      DefaultExpr:   (*ast.ColumnDefaultExpr)(nil),
      GeneratedExpr: &ast.GeneratedColumnExpr{
        As:     150,
        Stored: 178,
        Expr:   &ast.CallExpr{
          Rparen: 169,
          Func:   &ast.Ident{
            NamePos: 154,
            NameEnd: 160,
            Name:    "concat",
          },
          Distinct: false,
          Args:     []ast.Arg{
            &ast.ExprArg{
              Expr: &ast.Ident{
                NamePos: 161,
                NameEnd: 164,
                Name:    "baz",
              },
            },
            &ast.ExprArg{
              Expr: &ast.StringLiteral{
                ValuePos: 166,
                ValueEnd: 169,
                Value:    "a",
              },
            },
          },
        },
      },
      Options: (*ast.ColumnDefOptions)(nil),
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 482,
        NameEnd: 486,
        Name:    "quux",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 487,
        Name:    "JSON",
      },
      NotNull:       false,
      DefaultExpr:   (*ast.ColumnDefaultExpr)(nil),
      GeneratedExpr: (*ast.GeneratedColumnExpr)(nil),
      Options:       (*ast.ColumnDefOptions)(nil),
    },
    &ast.ColumnDef{
      Null: 515,
      Name: &ast.Ident{
        NamePos: 495,
        NameEnd: 500,
        Name:    "corge",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 501,
        Name:    "TIMESTAMP",
      },
      NotNull:     true,
      DefaultExpr: &ast.ColumnDefaultExpr{
        Default: 520,
        Rparen:  548,
        Expr:    &ast.CallExpr{
          Rparen: 547,
          Func:   &ast.Ident{
            NamePos: 529,
            NameEnd: 546,
            Name:    "current_timestamp",
          },
          Distinct: false,
          Args:     []ast.Arg(nil),
        },
      },
      GeneratedExpr: (*ast.GeneratedColumnExpr)(nil),
      Options:       (*ast.ColumnDefOptions)(nil),
    },
  },
  TableConstraints: []*ast.TableConstraint{
    &ast.TableConstraint{
      ConstraintPos: 0,
      Name:          (*ast.Ident)(nil),
      Constraint:    &ast.ForeignKey{
        Foreign:     182,
        Rparen:      222,
        OnDeleteEnd: -1,
        Columns:     []*ast.Ident{
          &ast.Ident{
            NamePos: 195,
            NameEnd: 198,
            Name:    "foo",
          },
        },
        ReferenceTable: &ast.Ident{
          NamePos: 211,
          NameEnd: 213,
          Name:    "t2",
        },
        ReferenceColumns: []*ast.Ident{
          &ast.Ident{
            NamePos: 215,
            NameEnd: 221,
            Name:    "t2key1",
          },
        },
        OnDelete: "",
      },
    },
    &ast.TableConstraint{
      ConstraintPos: 0,
      Name:          (*ast.Ident)(nil),
      Constraint:    &ast.ForeignKey{
        Foreign:     226,
        Rparen:      266,
        OnDeleteEnd: 284,
        Columns:     []*ast.Ident{
          &ast.Ident{
            NamePos: 239,
            NameEnd: 242,
            Name:    "bar",
          },
        },
        ReferenceTable: &ast.Ident{
          NamePos: 255,
          NameEnd: 257,
          Name:    "t2",
        },
        ReferenceColumns: []*ast.Ident{
          &ast.Ident{
            NamePos: 259,
            NameEnd: 265,
            Name:    "t2key2",
          },
        },
        OnDelete: "ON DELETE CASCADE",
      },
    },
    &ast.TableConstraint{
      ConstraintPos: 0,
      Name:          (*ast.Ident)(nil),
      Constraint:    &ast.ForeignKey{
        Foreign:     288,
        Rparen:      328,
        OnDeleteEnd: 348,
        Columns:     []*ast.Ident{
          &ast.Ident{
            NamePos: 301,
            NameEnd: 304,
            Name:    "baz",
          },
        },
        ReferenceTable: &ast.Ident{
          NamePos: 317,
          NameEnd: 319,
          Name:    "t2",
        },
        ReferenceColumns: []*ast.Ident{
          &ast.Ident{
            NamePos: 321,
            NameEnd: 327,
            Name:    "t2key3",
          },
        },
        OnDelete: "ON DELETE NO ACTION",
      },
    },
    &ast.TableConstraint{
      ConstraintPos: 352,
      Name:          &ast.Ident{
        NamePos: 363,
        NameEnd: 369,
        Name:    "fkname",
      },
      Constraint: &ast.ForeignKey{
        Foreign:     370,
        Rparen:      423,
        OnDeleteEnd: -1,
        Columns:     []*ast.Ident{
          &ast.Ident{
            NamePos: 383,
            NameEnd: 386,
            Name:    "foo",
          },
          &ast.Ident{
            NamePos: 388,
            NameEnd: 391,
            Name:    "bar",
          },
        },
        ReferenceTable: &ast.Ident{
          NamePos: 404,
          NameEnd: 406,
          Name:    "t2",
        },
        ReferenceColumns: []*ast.Ident{
          &ast.Ident{
            NamePos: 408,
            NameEnd: 414,
            Name:    "t2key1",
          },
          &ast.Ident{
            NamePos: 416,
            NameEnd: 422,
            Name:    "t2key2",
          },
        },
        OnDelete: "",
      },
    },
    &ast.TableConstraint{
      ConstraintPos: 0,
      Name:          (*ast.Ident)(nil),
      Constraint:    &ast.Check{
        Check:  427,
        Rparen: 442,
        Expr:   &ast.BinaryExpr{
          Op:   ">",
          Left: &ast.Ident{
            NamePos: 434,
            NameEnd: 437,
            Name:    "foo",
          },
          Right: &ast.IntLiteral{
            ValuePos: 440,
            ValueEnd: 441,
            Base:     10,
            Value:    "0",
          },
        },
      },
    },
    &ast.TableConstraint{
      ConstraintPos: 446,
      Name:          &ast.Ident{
        NamePos: 457,
        NameEnd: 462,
        Name:    "cname",
      },
      Constraint: &ast.Check{
        Check:  463,
        Rparen: 478,
        Expr:   &ast.BinaryExpr{
          Op:   ">",
          Left: &ast.Ident{
            NamePos: 470,
            NameEnd: 473,
            Name:    "bar",
          },
          Right: &ast.IntLiteral{
            ValuePos: 476,
            ValueEnd: 477,
            Base:     10,
            Value:    "0",
          },
        },
      },
    },
  },
  PrimaryKeys: []*ast.IndexKey{
    &ast.IndexKey{
      DirPos: -1,
      Name:   &ast.Ident{
        NamePos: 565,
        NameEnd: 568,
        Name:    "foo",
      },
      Dir: "",
    },
    &ast.IndexKey{
      DirPos: -1,
      Name:   &ast.Ident{
        NamePos: 570,
        NameEnd: 573,
        Name:    "bar",
      },
      Dir: "",
    },
  },
  Cluster:           (*ast.Cluster)(nil),
  RowDeletionPolicy: (*ast.CreateRowDeletionPolicy)(nil),
}

--- SQL
CREATE TABLE foo (foo INT64, bar FLOAT64 NOT NULL, baz STRING(255) NOT NULL OPTIONS(allow_commit_timestamp = null), qux STRING(255) NOT NULL AS (concat(baz, "a")) STORED, quux JSON, corge TIMESTAMP NOT NULL DEFAULT (current_timestamp()), FOREIGN KEY (foo) REFERENCES t2 (t2key1), FOREIGN KEY (bar) REFERENCES t2 (t2key2) ON DELETE CASCADE, FOREIGN KEY (baz) REFERENCES t2 (t2key3) ON DELETE NO ACTION, CONSTRAINT fkname FOREIGN KEY (foo, bar) REFERENCES t2 (t2key1, t2key2), CHECK (foo > 0), CONSTRAINT cname CHECK (bar > 0)) PRIMARY KEY (foo, bar)
