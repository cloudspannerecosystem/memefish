--- select_with_after_hint.sql
@{hint1 = 1} with subq1 as (select c1 from foo) select * from subq1

--- AST
&ast.QueryStatement{
  Hint: &ast.Hint{
    Atmark:  0,
    Rbrace:  11,
    Records: []*ast.HintRecord{
      &ast.HintRecord{
        Key: &ast.Ident{
          NamePos: 2,
          NameEnd: 7,
          Name:    "hint1",
        },
        Value: &ast.IntLiteral{
          ValuePos: 10,
          ValueEnd: 11,
          Base:     10,
          Value:    "1",
        },
      },
    },
  },
  With: &ast.With{
    With: 13,
    CTEs: []*ast.CTE{
      &ast.CTE{
        Rparen: 46,
        Name:   &ast.Ident{
          NamePos: 18,
          NameEnd: 23,
          Name:    "subq1",
        },
        QueryExpr: &ast.Select{
          Select:   28,
          Distinct: false,
          As:       nil,
          Results:  []ast.SelectItem{
            &ast.ExprSelectItem{
              Expr: &ast.Ident{
                NamePos: 35,
                NameEnd: 37,
                Name:    "c1",
              },
            },
          },
          From: &ast.From{
            From:   38,
            Source: &ast.TableName{
              Table: &ast.Ident{
                NamePos: 43,
                NameEnd: 46,
                Name:    "foo",
              },
              Hint:   (*ast.Hint)(nil),
              As:     (*ast.AsAlias)(nil),
              Sample: (*ast.TableSample)(nil),
            },
          },
          Where:   (*ast.Where)(nil),
          GroupBy: (*ast.GroupBy)(nil),
          Having:  (*ast.Having)(nil),
          OrderBy: (*ast.OrderBy)(nil),
          Limit:   (*ast.Limit)(nil),
        },
      },
    },
  },
  Query: &ast.Select{
    Select:   48,
    Distinct: false,
    As:       nil,
    Results:  []ast.SelectItem{
      &ast.Star{
        Star: 55,
      },
    },
    From: &ast.From{
      From:   57,
      Source: &ast.TableName{
        Table: &ast.Ident{
          NamePos: 62,
          NameEnd: 67,
          Name:    "subq1",
        },
        Hint:   (*ast.Hint)(nil),
        As:     (*ast.AsAlias)(nil),
        Sample: (*ast.TableSample)(nil),
      },
    },
    Where:   (*ast.Where)(nil),
    GroupBy: (*ast.GroupBy)(nil),
    Having:  (*ast.Having)(nil),
    OrderBy: (*ast.OrderBy)(nil),
    Limit:   (*ast.Limit)(nil),
  },
}

--- SQL
@{hint1=1} WITH subq1 AS (SELECT c1 FROM foo) SELECT * FROM subq1
