--- return_array_subquery.sql
GRAPH FinGraph
MATCH (p:Person)-[:Owns]->(account:Account)
RETURN
 p.name, account.id AS account_id,
 ARRAY {
   MATCH (a:Account)-[transfer:Transfers]->(:Account)
   WHERE a = account
   RETURN transfer.amount AS transfers
 } AS transfers
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    Graph:             0,
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        21,
                          RParen:        30,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "p",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  24,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 30,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLFullEdgeRight{
                          First:         31,
                          Last:          39,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: (*ast.Ident)(nil),
                            IsLabelCondition:     &ast.GQLIsLabelCondition{
                              IsOrColon:       33,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  34,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 34,
                                  NameEnd: 38,
                                  Name:    "Owns",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        41,
                          RParen:        57,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 42,
                              NameEnd: 49,
                              Name:    "account",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       49,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  50,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 50,
                                  NameEnd: 57,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GQLReturnStatement{
            Return:         59,
            AllOrDistinct:  "",
            ReturnItemList: []ast.GQLReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 67,
                      NameEnd: 68,
                      Name:    "p",
                    },
                    &ast.Ident{
                      NamePos: 69,
                      NameEnd: 73,
                      Name:    "name",
                    },
                  },
                },
              },
              &ast.Alias{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 75,
                      NameEnd: 82,
                      Name:    "account",
                    },
                    &ast.Ident{
                      NamePos: 83,
                      NameEnd: 85,
                      Name:    "id",
                    },
                  },
                },
                As: &ast.AsAlias{
                  As:    86,
                  Alias: &ast.Ident{
                    NamePos: 89,
                    NameEnd: 99,
                    Name:    "account_id",
                  },
                },
              },
              &ast.Alias{
                Expr: &ast.ArrayGQLSubQuery{
                  Array:  102,
                  RBrace: 225,
                  Query:  &ast.GQLQueryExpr{
                    GraphClause:               (*ast.GQLGraphClause)(nil),
                    MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
                      LinearQueryStatementList: []ast.GQLLinearQueryStatement{
                        &ast.GQLSimpleLinearQueryStatement{
                          PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
                            &ast.GQLMatchStatement{
                              Optional:     -1,
                              Match:        113,
                              MatchHint:    (*ast.Hint)(nil),
                              PrefixOrMode: nil,
                              GraphPattern: &ast.GQLGraphPattern{
                                PathPatternList: []*ast.GQLTopLevelPathPattern{
                                  &ast.GQLTopLevelPathPattern{
                                    PathSearchPrefixOrPathMode: nil,
                                    PathPattern:                &ast.GQLPathPattern{
                                      PathTermList: []*ast.GQLQuantifiablePathTerm{
                                        &ast.GQLQuantifiablePathTerm{
                                          Hint:     (*ast.Hint)(nil),
                                          PathTerm: &ast.GQLNodePattern{
                                            LParen:        119,
                                            RParen:        129,
                                            PatternFiller: &ast.GQLPatternFiller{
                                              Hint:                 (*ast.Hint)(nil),
                                              GraphPatternVariable: &ast.Ident{
                                                NamePos: 120,
                                                NameEnd: 121,
                                                Name:    "a",
                                              },
                                              IsLabelCondition: &ast.GQLIsLabelCondition{
                                                IsOrColon:       121,
                                                LabelExpression: &ast.GQLLabelName{
                                                  StartPos:  122,
                                                  IsPercent: false,
                                                  LabelName: &ast.Ident{
                                                    NamePos: 122,
                                                    NameEnd: 129,
                                                    Name:    "Account",
                                                  },
                                                },
                                              },
                                              Filter: nil,
                                            },
                                          },
                                          Quantifier: nil,
                                        },
                                        &ast.GQLQuantifiablePathTerm{
                                          Hint:     (*ast.Hint)(nil),
                                          PathTerm: &ast.GQLFullEdgeRight{
                                            First:         130,
                                            Last:          151,
                                            PatternFiller: &ast.GQLPatternFiller{
                                              Hint:                 (*ast.Hint)(nil),
                                              GraphPatternVariable: &ast.Ident{
                                                NamePos: 132,
                                                NameEnd: 140,
                                                Name:    "transfer",
                                              },
                                              IsLabelCondition: &ast.GQLIsLabelCondition{
                                                IsOrColon:       140,
                                                LabelExpression: &ast.GQLLabelName{
                                                  StartPos:  141,
                                                  IsPercent: false,
                                                  LabelName: &ast.Ident{
                                                    NamePos: 141,
                                                    NameEnd: 150,
                                                    Name:    "Transfers",
                                                  },
                                                },
                                              },
                                              Filter: nil,
                                            },
                                          },
                                          Quantifier: nil,
                                        },
                                        &ast.GQLQuantifiablePathTerm{
                                          Hint:     (*ast.Hint)(nil),
                                          PathTerm: &ast.GQLNodePattern{
                                            LParen:        153,
                                            RParen:        162,
                                            PatternFiller: &ast.GQLPatternFiller{
                                              Hint:                 (*ast.Hint)(nil),
                                              GraphPatternVariable: (*ast.Ident)(nil),
                                              IsLabelCondition:     &ast.GQLIsLabelCondition{
                                                IsOrColon:       154,
                                                LabelExpression: &ast.GQLLabelName{
                                                  StartPos:  155,
                                                  IsPercent: false,
                                                  LabelName: &ast.Ident{
                                                    NamePos: 155,
                                                    NameEnd: 162,
                                                    Name:    "Account",
                                                  },
                                                },
                                              },
                                              Filter: nil,
                                            },
                                          },
                                          Quantifier: nil,
                                        },
                                      },
                                    },
                                  },
                                },
                                WhereClause: &ast.Where{
                                  Where: 167,
                                  Expr:  &ast.BinaryExpr{
                                    Op:   "=",
                                    Left: &ast.Ident{
                                      NamePos: 173,
                                      NameEnd: 174,
                                      Name:    "a",
                                    },
                                    Right: &ast.Ident{
                                      NamePos: 177,
                                      NameEnd: 184,
                                      Name:    "account",
                                    },
                                  },
                                },
                              },
                            },
                            &ast.GQLReturnStatement{
                              Return:         188,
                              AllOrDistinct:  "",
                              ReturnItemList: []ast.GQLReturnItem{
                                &ast.Alias{
                                  Expr: &ast.Path{
                                    Idents: []*ast.Ident{
                                      &ast.Ident{
                                        NamePos: 195,
                                        NameEnd: 203,
                                        Name:    "transfer",
                                      },
                                      &ast.Ident{
                                        NamePos: 204,
                                        NameEnd: 210,
                                        Name:    "amount",
                                      },
                                    },
                                  },
                                  As: &ast.AsAlias{
                                    As:    211,
                                    Alias: &ast.Ident{
                                      NamePos: 214,
                                      NameEnd: 223,
                                      Name:    "transfers",
                                    },
                                  },
                                },
                              },
                              GroupByClause:        (*ast.GroupBy)(nil),
                              OrderByClause:        (*ast.OrderBy)(nil),
                              LimitAndOffsetClause: nil,
                            },
                          },
                        },
                      },
                    },
                  },
                },
                As: &ast.AsAlias{
                  As:    227,
                  Alias: &ast.Ident{
                    NamePos: 230,
                    NameEnd: 239,
                    Name:    "transfers",
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (p:Person)-[:Owns]->(account:Account)
RETURN p.name, account.id AS account_id, ARRAY {
MATCH (a:Account)-[transfer:Transfers]->(:Account) WHERE a = account
RETURN transfer.amount AS transfers
} AS transfers
