--- return_array_subquery.sql
GRAPH FinGraph
MATCH (p:Person)-[:Owns]->(account:Account)
RETURN
 p.name, account.id AS account_id,
 ARRAY {
   MATCH (a:Account)-[transfer:Transfers]->(:Account)
   WHERE a = account
   RETURN transfer.amount AS transfers
 } AS transfers
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathPattern: &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLNodePattern{
                          Lparen:        21,
                          Rparen:        30,
                          PatternFiller: &ast.GQLPatternFiller{
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "p",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 30,
                                  Name:    "Person",
                                },
                              },
                            },
                          },
                        },
                      },
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLFullEdgeRight{
                          Hyphen:        31,
                          Lbrack:        32,
                          Rbrack:        38,
                          Arrow:         39,
                          PatternFiller: &ast.GQLPatternFiller{
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       33,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 34,
                                  NameEnd: 38,
                                  Name:    "Owns",
                                },
                              },
                            },
                          },
                        },
                      },
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLNodePattern{
                          Lparen:        41,
                          Rparen:        57,
                          PatternFiller: &ast.GQLPatternFiller{
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 42,
                              NameEnd: 49,
                              Name:    "account",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       49,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 50,
                                  NameEnd: 57,
                                  Name:    "Account",
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          &ast.GQLReturnStatement{
            Return:         59,
            ReturnItemList: []*ast.GQLReturnItem{
              &ast.GQLReturnItem{
                Item: &ast.ExprSelectItem{
                  Expr: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 67,
                        NameEnd: 68,
                        Name:    "p",
                      },
                      &ast.Ident{
                        NamePos: 69,
                        NameEnd: 73,
                        Name:    "name",
                      },
                    },
                  },
                },
              },
              &ast.GQLReturnItem{
                Item: &ast.Alias{
                  Expr: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 75,
                        NameEnd: 82,
                        Name:    "account",
                      },
                      &ast.Ident{
                        NamePos: 83,
                        NameEnd: 85,
                        Name:    "id",
                      },
                    },
                  },
                  As: &ast.AsAlias{
                    As:    86,
                    Alias: &ast.Ident{
                      NamePos: 89,
                      NameEnd: 99,
                      Name:    "account_id",
                    },
                  },
                },
              },
              &ast.GQLReturnItem{
                Item: &ast.Alias{
                  Expr: &ast.ArrayGQLSubQuery{
                    Array:  102,
                    Rbrace: 225,
                    Query:  &ast.GQLQueryExpr{
                      MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
                        LinearQueryStatementList: []ast.GQLLinearQueryStatement{
                          &ast.GQLSimpleLinearQueryStatement{
                            PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
                              &ast.GQLMatchStatement{
                                Optional:     -1,
                                Match:        113,
                                GraphPattern: &ast.GQLGraphPattern{
                                  PathPatternList: []*ast.GQLTopLevelPathPattern{
                                    &ast.GQLTopLevelPathPattern{
                                      PathPattern: &ast.GQLPathPattern{
                                        PathTermList: []*ast.GQLQuantifiablePathTerm{
                                          &ast.GQLQuantifiablePathTerm{
                                            PathTerm: &ast.GQLNodePattern{
                                              Lparen:        119,
                                              Rparen:        129,
                                              PatternFiller: &ast.GQLPatternFiller{
                                                GraphPatternVariable: &ast.Ident{
                                                  NamePos: 120,
                                                  NameEnd: 121,
                                                  Name:    "a",
                                                },
                                                IsLabelCondition: &ast.GQLIsLabelCondition{
                                                  IsOrColon:       121,
                                                  LabelExpression: &ast.GQLElementLabel{
                                                    LabelName: &ast.Ident{
                                                      NamePos: 122,
                                                      NameEnd: 129,
                                                      Name:    "Account",
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                          },
                                          &ast.GQLQuantifiablePathTerm{
                                            PathTerm: &ast.GQLFullEdgeRight{
                                              Hyphen:        130,
                                              Lbrack:        131,
                                              Rbrack:        150,
                                              Arrow:         151,
                                              PatternFiller: &ast.GQLPatternFiller{
                                                GraphPatternVariable: &ast.Ident{
                                                  NamePos: 132,
                                                  NameEnd: 140,
                                                  Name:    "transfer",
                                                },
                                                IsLabelCondition: &ast.GQLIsLabelCondition{
                                                  IsOrColon:       140,
                                                  LabelExpression: &ast.GQLElementLabel{
                                                    LabelName: &ast.Ident{
                                                      NamePos: 141,
                                                      NameEnd: 150,
                                                      Name:    "Transfers",
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                          },
                                          &ast.GQLQuantifiablePathTerm{
                                            PathTerm: &ast.GQLNodePattern{
                                              Lparen:        153,
                                              Rparen:        162,
                                              PatternFiller: &ast.GQLPatternFiller{
                                                IsLabelCondition: &ast.GQLIsLabelCondition{
                                                  IsOrColon:       154,
                                                  LabelExpression: &ast.GQLElementLabel{
                                                    LabelName: &ast.Ident{
                                                      NamePos: 155,
                                                      NameEnd: 162,
                                                      Name:    "Account",
                                                    },
                                                  },
                                                },
                                              },
                                            },
                                          },
                                        },
                                      },
                                    },
                                  },
                                  WhereClause: &ast.Where{
                                    Where: 167,
                                    Expr:  &ast.BinaryExpr{
                                      Op:   "=",
                                      Left: &ast.Ident{
                                        NamePos: 173,
                                        NameEnd: 174,
                                        Name:    "a",
                                      },
                                      Right: &ast.Ident{
                                        NamePos: 177,
                                        NameEnd: 184,
                                        Name:    "account",
                                      },
                                    },
                                  },
                                },
                              },
                              &ast.GQLReturnStatement{
                                Return:         188,
                                ReturnItemList: []*ast.GQLReturnItem{
                                  &ast.GQLReturnItem{
                                    Item: &ast.Alias{
                                      Expr: &ast.Path{
                                        Idents: []*ast.Ident{
                                          &ast.Ident{
                                            NamePos: 195,
                                            NameEnd: 203,
                                            Name:    "transfer",
                                          },
                                          &ast.Ident{
                                            NamePos: 204,
                                            NameEnd: 210,
                                            Name:    "amount",
                                          },
                                        },
                                      },
                                      As: &ast.AsAlias{
                                        As:    211,
                                        Alias: &ast.Ident{
                                          NamePos: 214,
                                          NameEnd: 223,
                                          Name:    "transfers",
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                  As: &ast.AsAlias{
                    As:    227,
                    Alias: &ast.Ident{
                      NamePos: 230,
                      NameEnd: 239,
                      Name:    "transfers",
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (p:Person)-[:Owns]->(account:Account)
RETURN p.name, account.id AS account_id, ARRAY {
MATCH (a:Account)-[transfer:Transfers]->(:Account) WHERE a = account
RETURN transfer.amount AS transfers
} AS transfers
