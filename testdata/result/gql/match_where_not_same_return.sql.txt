--- match_where_not_same_return.sql
GRAPH FinGraph
MATCH (src:Account)<-[transfer:Transfers]-(dest:Account)
WHERE NOT SAME(src, dest)
RETURN src.id AS source_id, dest.id AS destination_id
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathPattern: &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        21,
                          RParen:        33,
                          PatternFiller: &ast.GQLPatternFiller{
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 25,
                              Name:    "src",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       25,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 26,
                                  NameEnd: 33,
                                  Name:    "Account",
                                },
                              },
                            },
                          },
                        },
                      },
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLFullEdgeLeft{
                          Lt:            34,
                          Hyphen:        56,
                          PatternFiller: &ast.GQLPatternFiller{
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 37,
                              NameEnd: 45,
                              Name:    "transfer",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       45,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 46,
                                  NameEnd: 55,
                                  Name:    "Transfers",
                                },
                              },
                            },
                          },
                        },
                      },
                      &ast.GQLQuantifiablePathTerm{
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        57,
                          RParen:        70,
                          PatternFiller: &ast.GQLPatternFiller{
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 58,
                              NameEnd: 62,
                              Name:    "dest",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       62,
                              LabelExpression: &ast.GQLElementLabel{
                                LabelName: &ast.Ident{
                                  NamePos: 63,
                                  NameEnd: 70,
                                  Name:    "Account",
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
              WhereClause: &ast.Where{
                Where: 72,
                Expr:  &ast.UnaryExpr{
                  OpPos: 78,
                  Op:    "NOT",
                  Expr:  &ast.CallExpr{
                    Rparen: 96,
                    Func:   &ast.Path{
                      Idents: []*ast.Ident{
                        &ast.Ident{
                          NamePos: 82,
                          NameEnd: 86,
                          Name:    "SAME",
                        },
                      },
                    },
                    Args: []ast.Arg{
                      &ast.ExprArg{
                        Expr: &ast.Ident{
                          NamePos: 87,
                          NameEnd: 90,
                          Name:    "src",
                        },
                      },
                      &ast.ExprArg{
                        Expr: &ast.Ident{
                          NamePos: 92,
                          NameEnd: 96,
                          Name:    "dest",
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          &ast.GQLReturnStatement{
            Return:         98,
            ReturnItemList: []*ast.GQLReturnItem{
              &ast.GQLReturnItem{
                Item: &ast.Alias{
                  Expr: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 105,
                        NameEnd: 108,
                        Name:    "src",
                      },
                      &ast.Ident{
                        NamePos: 109,
                        NameEnd: 111,
                        Name:    "id",
                      },
                    },
                  },
                  As: &ast.AsAlias{
                    As:    112,
                    Alias: &ast.Ident{
                      NamePos: 115,
                      NameEnd: 124,
                      Name:    "source_id",
                    },
                  },
                },
              },
              &ast.GQLReturnItem{
                Item: &ast.Alias{
                  Expr: &ast.Path{
                    Idents: []*ast.Ident{
                      &ast.Ident{
                        NamePos: 126,
                        NameEnd: 130,
                        Name:    "dest",
                      },
                      &ast.Ident{
                        NamePos: 131,
                        NameEnd: 133,
                        Name:    "id",
                      },
                    },
                  },
                  As: &ast.AsAlias{
                    As:    134,
                    Alias: &ast.Ident{
                      NamePos: 137,
                      NameEnd: 151,
                      Name:    "destination_id",
                    },
                  },
                },
              },
            },
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (src:Account)<-[transfer:Transfers]-(dest:Account) WHERE NOT SAME(src, dest)
RETURN src.id AS source_id, dest.id AS destination_id
