--- match_where_property_exists_return.sql
GRAPH FinGraph
MATCH (n:Person|Account WHERE PROPERTY_EXISTS(n, name))
RETURN n.name
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    Graph:             0,
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        21,
                          RParen:        69,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "n",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GQLLabelOrExpression{
                                Left: &ast.GQLLabelName{
                                  StartPos:  24,
                                  IsPercent: false,
                                  LabelName: &ast.Ident{
                                    NamePos: 24,
                                    NameEnd: 30,
                                    Name:    "Person",
                                  },
                                },
                                Right: &ast.GQLLabelName{
                                  StartPos:  31,
                                  IsPercent: false,
                                  LabelName: &ast.Ident{
                                    NamePos: 31,
                                    NameEnd: 38,
                                    Name:    "Account",
                                  },
                                },
                              },
                            },
                            Filter: &ast.Where{
                              Where: 39,
                              Expr:  &ast.CallExpr{
                                Rparen: 68,
                                Func:   &ast.Ident{
                                  NamePos: 45,
                                  NameEnd: 60,
                                  Name:    "PROPERTY_EXISTS",
                                },
                                Distinct: false,
                                Args:     []ast.Arg{
                                  &ast.ExprArg{
                                    Expr: &ast.Ident{
                                      NamePos: 61,
                                      NameEnd: 62,
                                      Name:    "n",
                                    },
                                  },
                                  &ast.ExprArg{
                                    Expr: &ast.Ident{
                                      NamePos: 64,
                                      NameEnd: 68,
                                      Name:    "name",
                                    },
                                  },
                                },
                                NamedArgs:    []*ast.NamedArg(nil),
                                NullHandling: nil,
                                Having:       nil,
                              },
                            },
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GQLReturnStatement{
            Return:         71,
            AllOrDistinct:  "",
            ReturnItemList: []ast.GQLReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 78,
                      NameEnd: 79,
                      Name:    "n",
                    },
                    &ast.Ident{
                      NamePos: 80,
                      NameEnd: 84,
                      Name:    "name",
                    },
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (n:Person|Account WHERE PROPERTY_EXISTS(n, name))
RETURN n.name
