--- match_optional.sql
GRAPH FinGraph
MATCH (n:Person)
OPTIONAL MATCH (n:Person)-[:Owns]->(a:Account {is_blocked: TRUE})
RETURN n.name, a.id AS blocked_account_id
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    Graph:             0,
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        21,
                          RParen:        30,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "n",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  24,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 30,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GQLMatchStatement{
            Optional:     32,
            Match:        41,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        47,
                          RParen:        56,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 48,
                              NameEnd: 49,
                              Name:    "n",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       49,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  50,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 50,
                                  NameEnd: 56,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLFullEdgeRight{
                          Hyphen:        57,
                          Gt:            65,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: (*ast.Ident)(nil),
                            IsLabelCondition:     &ast.GQLIsLabelCondition{
                              IsOrColon:       59,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  60,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 60,
                                  NameEnd: 64,
                                  Name:    "Owns",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLNodePattern{
                          LParen:        67,
                          RParen:        96,
                          PatternFiller: &ast.GQLPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 68,
                              NameEnd: 69,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GQLIsLabelCondition{
                              IsOrColon:       69,
                              LabelExpression: &ast.GQLLabelName{
                                StartPos:  70,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 70,
                                  NameEnd: 77,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: &ast.GQLPropertyFilters{
                              LBrace:                 78,
                              PropertyFilterElemList: []*ast.GQLElementProperty{
                                &ast.GQLElementProperty{
                                  ElementPropertyName: &ast.Ident{
                                    NamePos: 79,
                                    NameEnd: 89,
                                    Name:    "is_blocked",
                                  },
                                  ElementPropertyValue: &ast.BoolLiteral{
                                    ValuePos: 91,
                                    Value:    true,
                                  },
                                },
                              },
                              RBrace: 95,
                            },
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GQLReturnStatement{
            Return:         98,
            AllOrDistinct:  "",
            ReturnItemList: []ast.GQLReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 105,
                      NameEnd: 106,
                      Name:    "n",
                    },
                    &ast.Ident{
                      NamePos: 107,
                      NameEnd: 111,
                      Name:    "name",
                    },
                  },
                },
              },
              &ast.Alias{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 113,
                      NameEnd: 114,
                      Name:    "a",
                    },
                    &ast.Ident{
                      NamePos: 115,
                      NameEnd: 117,
                      Name:    "id",
                    },
                  },
                },
                As: &ast.AsAlias{
                  As:    118,
                  Alias: &ast.Ident{
                    NamePos: 121,
                    NameEnd: 139,
                    Name:    "blocked_account_id",
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (n:Person)
OPTIONAL MATCH (n:Person)-[:Owns]->(a:Account {is_blocked: TRUE})
RETURN n.name, a.id AS blocked_account_id
