--- match_any_shortest_subpath_trail.sql
GRAPH FinGraph
MATCH ANY SHORTEST (TRAIL ->{1,4})
RETURN COUNT(1) as num_paths
--- AST
&ast.GQLGraphQuery{
  GraphClause: &ast.GQLGraphClause{
    Graph:             0,
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GQLMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GQLLinearQueryStatement{
      &ast.GQLSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GQLPrimitiveQueryStatement{
          &ast.GQLMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: &ast.GQLPathSearchPrefix{
              StartPos:     21,
              LastEnd:      33,
              SearchPrefix: "ANY SHORTEST",
            },
            GraphPattern: &ast.GQLGraphPattern{
              PathPatternList: []*ast.GQLTopLevelPathPattern{
                &ast.GQLTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GQLPathPattern{
                    PathTermList: []*ast.GQLQuantifiablePathTerm{
                      &ast.GQLQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GQLSubpathPattern{
                          LParen:   34,
                          RParen:   48,
                          PathMode: &ast.GQLPathMode{
                            Mode:      "TRAIL",
                            ModeToken: &ast.Ident{
                              NamePos: 35,
                              NameEnd: 40,
                              Name:    "TRAIL",
                            },
                            PathOrPathsToken: (*ast.Ident)(nil),
                          },
                          PathPattern: &ast.GQLPathPattern{
                            PathTermList: []*ast.GQLQuantifiablePathTerm{
                              &ast.GQLQuantifiablePathTerm{
                                Hint:     (*ast.Hint)(nil),
                                PathTerm: &ast.GQLAbbreviatedEdgeRight{
                                  Hyphen: 41,
                                  Gt:     41,
                                },
                                Quantifier: &ast.GQLBoundedQuantifier{
                                  LBrace:     43,
                                  RBrace:     47,
                                  LowerBound: &ast.IntLiteral{
                                    ValuePos: 44,
                                    ValueEnd: 45,
                                    Base:     10,
                                    Value:    "1",
                                  },
                                  UpperBound: &ast.IntLiteral{
                                    ValuePos: 46,
                                    ValueEnd: 47,
                                    Base:     10,
                                    Value:    "4",
                                  },
                                },
                              },
                            },
                          },
                          WhereClause: (*ast.Where)(nil),
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GQLReturnStatement{
            Return:         50,
            AllOrDistinct:  "",
            ReturnItemList: []ast.GQLReturnItem{
              &ast.Alias{
                Expr: &ast.CallExpr{
                  Rparen: 64,
                  Func:   &ast.Ident{
                    NamePos: 57,
                    NameEnd: 62,
                    Name:    "COUNT",
                  },
                  Distinct: false,
                  Args:     []ast.Arg{
                    &ast.ExprArg{
                      Expr: &ast.IntLiteral{
                        ValuePos: 63,
                        ValueEnd: 64,
                        Base:     10,
                        Value:    "1",
                      },
                    },
                  },
                  NamedArgs:    []*ast.NamedArg(nil),
                  NullHandling: nil,
                  Having:       nil,
                },
                As: &ast.AsAlias{
                  As:    66,
                  Alias: &ast.Ident{
                    NamePos: 69,
                    NameEnd: 78,
                    Name:    "num_paths",
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH ANY SHORTEST (TRAIL ->{1,4})
RETURN COUNT(1) AS num_paths
