--- create_table_types.sql
create table types (
  b bool,
  i int64,
  f32 float32,
  f float64,
  d date,
  t timestamp,
  s string(256),
  smax string(max),
  bs bytes(256),
  bsmax bytes(max),
  ab array<bool>,
  abs array<bytes(max)>,
  p examples.ProtoType,
  af32vl array<float32>(vector_length=>128),
) primary key (i)

--- AST
&ast.CreateTable{
  Rparen: 297,
  Name:   &ast.Path{
    Idents: []*ast.Ident{
      &ast.Ident{
        NamePos: 13,
        NameEnd: 18,
        Name:    "types",
      },
    },
  },
  Columns: []*ast.ColumnDef{
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 23,
        NameEnd: 24,
        Name:    "b",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 25,
        Name:    "BOOL",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 33,
        NameEnd: 34,
        Name:    "i",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 35,
        Name:    "INT64",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 44,
        NameEnd: 47,
        Name:    "f32",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 48,
        Name:    "FLOAT32",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 59,
        NameEnd: 60,
        Name:    "f",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 61,
        Name:    "FLOAT64",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 72,
        NameEnd: 73,
        Name:    "d",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 74,
        Name:    "DATE",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 82,
        NameEnd: 83,
        Name:    "t",
      },
      Type: &ast.ScalarSchemaType{
        NamePos: 84,
        Name:    "TIMESTAMP",
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 97,
        NameEnd: 98,
        Name:    "s",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 99,
        Rparen:  109,
        Name:    "STRING",
        Size:    &ast.IntLiteral{
          ValuePos: 106,
          ValueEnd: 109,
          Base:     10,
          Value:    "256",
        },
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 114,
        NameEnd: 118,
        Name:    "smax",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 119,
        Rparen:  129,
        Name:    "STRING",
        Max:     true,
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 134,
        NameEnd: 136,
        Name:    "bs",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 137,
        Rparen:  146,
        Name:    "BYTES",
        Size:    &ast.IntLiteral{
          ValuePos: 143,
          ValueEnd: 146,
          Base:     10,
          Value:    "256",
        },
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 151,
        NameEnd: 156,
        Name:    "bsmax",
      },
      Type: &ast.SizedSchemaType{
        NamePos: 157,
        Rparen:  166,
        Name:    "BYTES",
        Max:     true,
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 171,
        NameEnd: 173,
        Name:    "ab",
      },
      Type: &ast.ArraySchemaType{
        Array:  174,
        Gt:     184,
        Rparen: -1,
        Item:   &ast.ScalarSchemaType{
          NamePos: 180,
          Name:    "BOOL",
        },
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 189,
        NameEnd: 192,
        Name:    "abs",
      },
      Type: &ast.ArraySchemaType{
        Array:  193,
        Gt:     209,
        Rparen: -1,
        Item:   &ast.SizedSchemaType{
          NamePos: 199,
          Rparen:  208,
          Name:    "BYTES",
          Max:     true,
        },
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 214,
        NameEnd: 215,
        Name:    "p",
      },
      Type: &ast.NamedType{
        Path: []*ast.Ident{
          &ast.Ident{
            NamePos: 216,
            NameEnd: 224,
            Name:    "examples",
          },
          &ast.Ident{
            NamePos: 225,
            NameEnd: 234,
            Name:    "ProtoType",
          },
        },
      },
      Hidden: -1,
    },
    &ast.ColumnDef{
      Null: -1,
      Name: &ast.Ident{
        NamePos: 238,
        NameEnd: 244,
        Name:    "af32vl",
      },
      Type: &ast.ArraySchemaType{
        Array:  245,
        Gt:     258,
        Rparen: 278,
        Item:   &ast.ScalarSchemaType{
          NamePos: 251,
          Name:    "FLOAT32",
        },
        NamedArgs: []*ast.NamedArg{
          &ast.NamedArg{
            Name: &ast.Ident{
              NamePos: 260,
              NameEnd: 273,
              Name:    "vector_length",
            },
            Value: &ast.IntLiteral{
              ValuePos: 275,
              ValueEnd: 278,
              Base:     10,
              Value:    "128",
            },
          },
        },
      },
      Hidden: -1,
    },
  },
  PrimaryKeys: []*ast.IndexKey{
    &ast.IndexKey{
      DirPos: -1,
      Name:   &ast.Ident{
        NamePos: 296,
        NameEnd: 297,
        Name:    "i",
      },
    },
  },
}

--- SQL
CREATE TABLE types (b BOOL, i INT64, f32 FLOAT32, f FLOAT64, d DATE, t TIMESTAMP, s STRING(256), smax STRING(MAX), bs BYTES(256), bsmax BYTES(MAX), ab ARRAY<BOOL>, abs ARRAY<BYTES(MAX)>, p examples.ProtoType, af32vl ARRAY<FLOAT32>(vector_length => 128)) PRIMARY KEY (i)
